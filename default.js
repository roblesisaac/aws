module.exports.user = () => {
  return { username: 'Eiken', password: 'pass' };
};

module.exports.site = (user) => {
  return { name: 'plysheet', userId: ((user || {})._id || 'no id'), url: 'plysheet' };  
};

module.exports.sheet = (site) => {
  return {
    name: 'sheets',
    link: 'sheets',
    siteId: (site || {})._id || 'no site id',
    public: true,
    sort: 1,
    _init: '',
    templates: [{name: 'main', text: '<h1>here is the main text</h1>'}, {name: 'slide', text: '.fade-in.mui-enter,.fade-out.mui-leave,.hinge-in-from-bottom.mui-enter,.hinge-in-from-left.mui-enter,.hinge-in-from-middle-x.mui-enter,.hinge-in-from-middle-y.mui-enter,.hinge-in-from-right.mui-enter,.hinge-in-from-top.mui-enter,.hinge-out-from-bottom.mui-leave,.hinge-out-from-left.mui-leave,.hinge-out-from-middle-x.mui-leave,.hinge-out-from-middle-y.mui-leave,.hinge-out-from-right.mui-leave,.hinge-out-from-top.mui-leave,.scale-in-down.mui-enter,.scale-in-up.mui-enter,.scale-out-down.mui-leave,.scale-out-up.mui-leave,.slide-in-down.mui-enter,.slide-in-left.mui-enter,.slide-in-right.mui-enter,.slide-in-up.mui-enter,.slide-out-down.mui-leave,.slide-out-left.mui-leave,.slide-out-right.mui-leave,.slide-out-up.mui-leave,.spin-in-ccw.mui-enter,.spin-in.mui-enter,.spin-out-ccw.mui-leave,.spin-out.mui-leave{transition-duration:.5s;transition-timing-function:linear}.slide-in-down.mui-enter{-webkit-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%);transition-property:-webkit-transform,opacity;transition-property:transform,opacity;-webkit-backface-visibility:hidden;backface-visibility:hidden}.slide-in-left.mui-enter,.slide-in-up.mui-enter{transition-property:-webkit-transform,opacity;-webkit-backface-visibility:hidden}.slide-in-down.mui-enter.mui-enter-active{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}.slide-in-left.mui-enter{-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);transition-property:transform,opacity;backface-visibility:hidden}.slide-in-left.mui-enter.mui-enter-active{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}.slide-in-up.mui-enter{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%);transition-property:transform,opacity;backface-visibility:hidden}.slide-in-right.mui-enter,.slide-out-down.mui-leave{transition-property:-webkit-transform,opacity;-webkit-backface-visibility:hidden}.slide-in-up.mui-enter.mui-enter-active{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}.slide-in-right.mui-enter{-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);transition-property:transform,opacity;backface-visibility:hidden}.slide-in-right.mui-enter.mui-enter-active{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}.slide-out-down.mui-leave{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);transition-property:transform,opacity;backface-visibility:hidden}.slide-out-right.mui-leave,.slide-out-up.mui-leave{transition-property:-webkit-transform,opacity;-webkit-backface-visibility:hidden}.slide-out-down.mui-leave.mui-leave-active{-webkit-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%)}.slide-out-right.mui-leave{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);transition-property:transform,opacity;backface-visibility:hidden}.slide-out-right.mui-leave.mui-leave-active{-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%)}.slide-out-up.mui-leave{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);transition-property:transform,opacity;backface-visibility:hidden}.slide-out-up.mui-leave.mui-leave-active{-webkit-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%)}.slide-out-left.mui-leave{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);transition-property:-webkit-transform,opacity;transition-property:transform,opacity;-webkit-backface-visibility:hidden;backface-visibility:hidden}.slide-out-left.mui-leave.mui-leave-active{-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%)}.fade-in.mui-enter{opacity:0;transition-property:opacity}.fade-in.mui-enter.mui-enter-active{opacity:1}.fade-out.mui-leave{opacity:1;transition-property:opacity}.fade-out.mui-leave.mui-leave-active{opacity:0}.hinge-in-from-top.mui-enter{-webkit-transform:perspective(2000px) rotateX(-90deg);transform:perspective(2000px) rotateX(-90deg);-webkit-transform-origin:top;-ms-transform-origin:top;transform-origin:top;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-in-from-top.mui-enter.mui-enter-active{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0)}.hinge-in-from-right.mui-enter{-webkit-transform:perspective(2000px) rotateY(-90deg);transform:perspective(2000px) rotateY(-90deg);-webkit-transform-origin:right;-ms-transform-origin:right;transform-origin:right;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-in-from-right.mui-enter.mui-enter-active{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0)}.hinge-in-from-bottom.mui-enter{-webkit-transform:perspective(2000px) rotateX(90deg);transform:perspective(2000px) rotateX(90deg);-webkit-transform-origin:bottom;-ms-transform-origin:bottom;transform-origin:bottom;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-in-from-bottom.mui-enter.mui-enter-active{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0)}.hinge-in-from-left.mui-enter{-webkit-transform:perspective(2000px) rotateY(90deg);transform:perspective(2000px) rotateY(90deg);-webkit-transform-origin:left;-ms-transform-origin:left;transform-origin:left;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-in-from-left.mui-enter.mui-enter-active{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0)}.hinge-in-from-middle-x.mui-enter{-webkit-transform:perspective(2000px) rotateX(-90deg);transform:perspective(2000px) rotateX(-90deg);-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-in-from-middle-x.mui-enter.mui-enter-active{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0)}.hinge-in-from-middle-y.mui-enter{-webkit-transform:perspective(2000px) rotateY(-90deg);transform:perspective(2000px) rotateY(-90deg);-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-in-from-middle-y.mui-enter.mui-enter-active{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0)}.hinge-out-from-top.mui-leave{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0);-webkit-transform-origin:top;-ms-transform-origin:top;transform-origin:top;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-out-from-top.mui-leave.mui-leave-active{-webkit-transform:perspective(2000px) rotateX(-90deg);transform:perspective(2000px) rotateX(-90deg)}.hinge-out-from-right.mui-leave{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0);-webkit-transform-origin:right;-ms-transform-origin:right;transform-origin:right;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-out-from-right.mui-leave.mui-leave-active{-webkit-transform:perspective(2000px) rotateY(-90deg);transform:perspective(2000px) rotateY(-90deg)}.hinge-out-from-bottom.mui-leave{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0);-webkit-transform-origin:bottom;-ms-transform-origin:bottom;transform-origin:bottom;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-out-from-bottom.mui-leave.mui-leave-active{-webkit-transform:perspective(2000px) rotateX(90deg);transform:perspective(2000px) rotateX(90deg)}.hinge-out-from-left.mui-leave{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0);-webkit-transform-origin:left;-ms-transform-origin:left;transform-origin:left;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-out-from-left.mui-leave.mui-leave-active{-webkit-transform:perspective(2000px) rotateY(90deg);transform:perspective(2000px) rotateY(90deg)}.hinge-out-from-middle-x.mui-leave{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0);-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-out-from-middle-x.mui-leave.mui-leave-active{-webkit-transform:perspective(2000px) rotateX(-90deg);transform:perspective(2000px) rotateX(-90deg)}.hinge-out-from-middle-y.mui-leave{-webkit-transform:perspective(2000px) rotate(0);transform:perspective(2000px) rotate(0);-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.hinge-out-from-middle-y.mui-leave.mui-leave-active{-webkit-transform:perspective(2000px) rotateY(-90deg);transform:perspective(2000px) rotateY(-90deg)}.scale-in-up.mui-enter{-webkit-transform:scale(.5);-ms-transform:scale(.5);transform:scale(.5);transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.scale-in-up.mui-enter.mui-enter-active{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.scale-in-down.mui-enter{-webkit-transform:scale(1.5);-ms-transform:scale(1.5);transform:scale(1.5);transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.scale-in-down.mui-enter.mui-enter-active{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.scale-out-up.mui-leave{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.scale-out-down.mui-leave,.spin-in.mui-enter{transition-property:-webkit-transform,opacity}.scale-out-up.mui-leave.mui-leave-active{-webkit-transform:scale(1.5);-ms-transform:scale(1.5);transform:scale(1.5)}.scale-out-down.mui-leave{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);transition-property:transform,opacity}.scale-out-down.mui-leave.mui-leave-active{-webkit-transform:scale(.5);-ms-transform:scale(.5);transform:scale(.5)}.spin-in.mui-enter{-webkit-transform:rotate(-.75turn);-ms-transform:rotate(-.75turn);transform:rotate(-.75turn);transition-property:transform,opacity}.spin-in-ccw.mui-enter,.spin-out.mui-leave{transition-property:-webkit-transform,opacity}.spin-in.mui-enter.mui-enter-active{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}.spin-out.mui-leave{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);transition-property:transform,opacity}.spin-out.mui-leave.mui-leave-active{-webkit-transform:rotate(.75turn);-ms-transform:rotate(.75turn);transform:rotate(.75turn)}.spin-in-ccw.mui-enter{-webkit-transform:rotate(.75turn);-ms-transform:rotate(.75turn);transform:rotate(.75turn);transition-property:transform,opacity}.spin-in-ccw.mui-enter.mui-enter-active{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}.spin-out-ccw.mui-leave{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);transition-property:-webkit-transform,opacity;transition-property:transform,opacity}.spin-out-ccw.mui-leave.mui-leave-active{-webkit-transform:rotate(-.75turn);-ms-transform:rotate(-.75turn);transform:rotate(-.75turn)}.slow{transition-duration:750ms!important;-webkit-animation-duration:750ms!important;animation-duration:750ms!important}.fast{transition-duration:250ms!important;-webkit-animation-duration:250ms!important;animation-duration:250ms!important}.linear{transition-timing-function:linear!important;-webkit-animation-timing-function:linear!important;animation-timing-function:linear!important}.ease{transition-timing-function:ease!important;-webkit-animation-timing-function:ease!important;animation-timing-function:ease!important}.ease-in{transition-timing-function:ease-in!important;-webkit-animation-timing-function:ease-in!important;animation-timing-function:ease-in!important}.ease-out{transition-timing-function:ease-out!important;-webkit-animation-timing-function:ease-out!important;animation-timing-function:ease-out!important}.ease-in-out{transition-timing-function:ease-in-out!important;-webkit-animation-timing-function:ease-in-out!important;animation-timing-function:ease-in-out!important}.bounce-in{transition-timing-function:cubic-bezier(.485,.155,.24,1.245)!important;-webkit-animation-timing-function:cubic-bezier(.485,.155,.24,1.245)!important;animation-timing-function:cubic-bezier(.485,.155,.24,1.245)!important}.bounce-out{transition-timing-function:cubic-bezier(.485,.155,.515,.845)!important;-webkit-animation-timing-function:cubic-bezier(.485,.155,.515,.845)!important;animation-timing-function:cubic-bezier(.485,.155,.515,.845)!important}.bounce-in-out{transition-timing-function:cubic-bezier(.76,-.245,.24,1.245)!important;-webkit-animation-timing-function:cubic-bezier(.76,-.245,.24,1.245)!important;animation-timing-function:cubic-bezier(.76,-.245,.24,1.245)!important}.short-delay{transition-delay:.3s!important;-webkit-animation-delay:.3s!important;animation-delay:.3s!important}.long-delay{transition-delay:.7s!important;-webkit-animation-delay:.7s!important;animation-delay:.7s!important}.shake{-webkit-animation-name:shake-7;animation-name:shake-7}@-webkit-keyframes shake-7{0%,10%,20%,30%,40%,50%,60%,70%,80%,90%{-webkit-transform:translateX(7%);transform:translateX(7%)}15%,25%,35%,45%,5%,55%,65%,75%,85%,95%{-webkit-transform:translateX(-7%);transform:translateX(-7%)}}@keyframes shake-7{0%,10%,20%,30%,40%,50%,60%,70%,80%,90%{-webkit-transform:translateX(7%);transform:translateX(7%)}15%,25%,35%,45%,5%,55%,65%,75%,85%,95%{-webkit-transform:translateX(-7%);transform:translateX(-7%)}}.spin-cw{-webkit-animation-name:spin-cw-1turn;animation-name:spin-cw-1turn}@-webkit-keyframes spin-cw-1turn{0%{-webkit-transform:rotate(-1turn);transform:rotate(-1turn)}100%{-webkit-transform:rotate(0);transform:rotate(0)}}.spin-ccw{-webkit-animation-name:spin-cw-1turn;animation-name:spin-cw-1turn}@keyframes spin-cw-1turn{0%,100%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.wiggle{-webkit-animation-name:wiggle-7deg;animation-name:wiggle-7deg}@-webkit-keyframes wiggle-7deg{40%,50%,60%{-webkit-transform:rotate(7deg);transform:rotate(7deg)}35%,45%,55%,65%{-webkit-transform:rotate(-7deg);transform:rotate(-7deg)}0%,100%,30%,70%{-webkit-transform:rotate(0);transform:rotate(0)}}@keyframes wiggle-7deg{40%,50%,60%{-webkit-transform:rotate(7deg);transform:rotate(7deg)}35%,45%,55%,65%{-webkit-transform:rotate(-7deg);transform:rotate(-7deg)}0%,100%,30%,70%{-webkit-transform:rotate(0);transform:rotate(0)}}.infinite{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}'}, {name: 'css', text: "body {\n  background: #fff;\n}\n\nbody * {\n  font-family: 'Roboto Mono', monospace;\n}\n\na {\n  color: #4285f4;\n}\n\n.absolute {\n  position: absolute;\n  top: 0;\n  z-index: 100;\n}\n\n.ace * {\n  font-family: monospace;\n}\n\n.ace-clouds {\n  background-color: #f3f5f6 !important;\n}\n\n.ace-clouds .ace_gutter {\n  background-color: #f3f5f6 !important;\n  border-right: 1px solid #cfd6d9 !important;\n  color: #cfd6d9 !important\n}\n\n.ace_gutter {\n  background-color: #fff !important;\n  color: #ccc !important;\n  border-right: 1px solid #ccc !important;\n}\n\n.ace_search_field,\n.ace_searchbtn {\n  color: #333\n}\n\n.alert {\n  position:absolute;\n  padding:10px;\n  margin:0;\n  top:0;\n  left:0;\n  width: 100vw;\n  height: 100vh;\n  background:rgba(255,255,255,0.85);\n  z-index: 10000000;\n}\n\n.appearHide * {\n  opacity: 0;\n  transform: translateX(10px);\n}\n\n.appear * {\n  opacity: 1;\n  transform: translateX(0);\n  transition: transform 0.75s;\n}\n\n.bgCover {\n  background-size: cover;\n}\n\n.bgBlack {\n  background-color: #333;\n  color: #fff\n}\n\n.bgBlack a, .bgRoyal a {\n  color: #fff\n}\n\n.bgBlack a:hover, .bgRoyal a:hover {\n  color: #94c0cc;\n  transition: all .3s ease;\n}\n\n.bgBleach {\n  background-color: #fff;\n}\n\n.bgBleachClear {\n  background-color: rgba(255,255,255,.4);\n}\n\n.bgBluePastel {\n  background-color: #94c0cc !important;\n}\n\n.bgBlue, .bgBlue.colorBlack, .bgBlue .colorBlue {\n  background-color: #4285f4 !important;\n  color: #fff !important;\n}\n\n.bgContain {\n  background-size: contain;\n}\n\n.bgDarkBlue {\n  background-color: #1779ba !important\n}\n\n.bgDarkGreen {\n  background-color: #54bf98 !important\n}\n\n.bgDarkOrange {\n  background-color: #4caf50 !important\n}\n\n.bgEgg {\n  background-color: #f4f4f0 !important\n}\n\n.bgGreen {\n  background-color: #bcdf8a !important\n}\n\n.bgJet {\n  background-color: #000 !important;\n  color: #fff !important;\n}\n\n.bgLight {\n  background-color: #fafafa !important\n}\n\n.bgLightRed {\n  background-color: #f4b2a6 !important\n}\n\n.bgLightYellow {\n  background-color: #f5f9ad !important\n}\n\n.bgOrange {\n  background-color: #fad48b !important\n}\n\n.bgPink {\n  background-color: #f2a3bd !important\n}\n\n.bgPurple {\n  background-color: #c4adc9 !important\n}\n\n.bgRed {\n  background-color: #ed7777 !important\n}\n\n.bgDarkRed {\n  background-color: #ff0000 !important\n}\n\n.bgRoyal {\n  background-color: #273f87 !important;\n  color: #fff;\n}\n\n.bgSky {\n  background-color: #F0F8FF !important\n}\n\n.bgTurquoise {\n  background-color: #6fe7db !important\n}\n\n.bgWhite {\n  background-color: #fafafa !important\n}\n\n.bgYellow {\n  background-color: #d6d963 !important\n}\n\n.border {\n  border: 1px !important;\n  border-style: solid !important;\n  border-color: #dfdfdf !important;\n}\n\n.border0, .borderNone, .border-none {\n  border: 0;\n}\n\n.borderBlack {\n  border-color: #000 !important;\n}\n\n.borderBleach {\n  border-color: #fff !important;\n}\n\n.borderBlue {\n  border-color: #4285f4 !important;\n}\n\n.borderBluePastel {\n  border-color: #94c0cc !important;\n}\n\n.borderWhite {\n  border-color: #f4f4f0 !important;\n}\n\n.borderDotted {\n  border-style: dotted;\n}\n\n.borderTop {\n  border-top: 1px solid #ddd;\n}\n\n.borderBottom {\n  border-bottom: 1px solid #ddd;\n}\n\n.borderRight {\n  border-right: 1px solid #ddd;\n}\n\n.borderRightDotted {\n  border-right: 2px dotted #ddd;\n}\n\n.borderThick {\n  border-width: 2px;\n}\n\n.borderTransparent {\n  border-color: transparent;\n}\n\n.boxShadow {\n  -webkit-box-shadow: 2px 2px 37px 5px rgba(0,0,0,0.75);\n  -moz-box-shadow: 2px 2px 37px 5px rgba(0,0,0,0.75);\n  box-shadow: 2px 2px 37px 5px rgba(0,0,0,0.75);\n}\n\n.boxShadowLight {\n  box-shadow: 0px 0px 15px 0px rgba(0,0,0,0.5);\n}\n\n.break {\n  width: 100%;\n  display: block;\n  height: 40px;\n}\n\n.button {\n  background-color: #fff;\n  color: #4285f4;\n  border: 0;\n  margin: 0;\n}\n\n.button:hover {\n  color: #1779ba !important;\n  background-color: #f4f4f0 !important;\n  transition: all .3s ease;\n}\n\n.button:hover * {\n  color: #1779ba !important;\n  transition: all .3s ease;\n}\n\n.colorBleach {\n  color: #fff !important;\n}\n\n.colorBlue {\n  color: #4285f4 !important;\n}\n\n.colorBluePastel {\n  color: #94c0cc !important;\n}\n\n.colorDarkBlue {\n  color: #1779ba !important;\n}\n\n.colorBlack {\n  color: #333 !important;\n}\n\n.colorDarkGreen {\n  color: #54bf98 !important;\n}\n\n\n.colorDarkOrange {\n  color: #4caf50 !important;\n}\n\n.colorGreen {\n  color: #bcdf8a !important;\n}\n\n.colorGrey {\n  color: #777 !important;\n}\n\n.colorJet {\n  color: #000 !important;\n}\n\n.colorLight {\n  color: #fafafa !important;\n}\n\n.colorLightRed {\n  color: #f4b2a6 !important;\n}\n\n.colorLightYellow {\n  color: #f5f9ad !important;\n}\n\n.colorOrange {\n  color: #fad48b !important;\n}\n\n.colorPink {\n  color: #f2a3bd !important;\n}\n\n.colorPurple {\n  color: #c4adc9 !important;\n}\n\n.colorRed {\n  color: #ed7777 !important;\n}\n\n.colorDarkRed {\n  color: #ff0000 !important;\n}\n\n.colorRoyal {\n  color: #273f87 !important;\n}\n\n.colorTurquoise {\n  color: #6fe7db !important;\n}\n\n.colorWhite {\n  color: #f4f4f0 !important;\n}\n\n\n.colorYellow {\n  color: #d6d963 !important;\n}\n\n.divider {\n  display: block;\n  height: 20px;\n}\n\n.dotted {\n  border: 0;\n  border-bottom: 2px dotted #94c0cc;\n  min-height: inherit;\n}\n\n.displayBlock {\n  display: block;\n}\n\n.displayInline {\n  display: inline;\n}\n\n.expandX {\n  min-width: 100%;\n}\n\n.expandY, .stretchY {\n  min-height: 100vh;  \n}\n\n.fixed {\n  position: fixed;\n  z-index: 100;\n}\n\n.fontSmall {\n  font-size: .5em;\n}\n\n.fontMedium, .fontMedium * {\n  font-size: 1.5rem;\n}\n\n.fontLarge {\n  font-size: 2rem;\n}\n\n.fontThick {\n  /*font-family: 'Kanit', sans-serif !important;*/\n  /*font-family: 'Coda', cursive !important;*/\n  font-family: 'Maven Pro', sans-serif !important;\n}\n\n.fontCursive {\n  font-family:'Lobster',cursive !important;\n}\n\n.flatten {\n  margin: 0 !important;\n  padding: 0 !important;\n}\n\n.fontWeightBold, .bold {\n  font-weight: bold;\n}\n\n.heightInherit {\n  height: inherit;\n}\n\n.hoverJet:hover {\n  background: #000 !important;\n  transition: all .3s ease;\n}\n\n.hoverJet:hover * {\n  color: #fff !important;\n}\n\n.hoverBlue:hover {\n  background: #4285f4 !important;\n  transition: all .3s ease;\n}\n\n.hoverBlue:hover, .hoverBlue:hover * {\n  color: #fff !important;\n  background: #4285f4 !important;\n  background-color: #4285f4 !important;\n}\n\n.hoverWhite:hover {\n  background: #f4f4f0 !important;\n  transition: all .3s ease;\n}\n\n.hoverWhite:hover * {\n  color: #4285f4 !important;\n}\n\n.icon {\n  height: 45px;\n}\n\n.indent {\n  margin-left: 15px;\n}\n\n.inlineBlock, .inline-block {\n  display: inline-block;\n}\n\n.listCircle {\n  list-style: circle;\n}\n\n.listStyleNone, list-style-none {\n  list-style: none;\n}\n\n.margin {\n  margin: 20px !important;\n}\n\n.margins {\n  margin: 0 40px;\n}\n\n.marginY {\n  margin: 20px 0;\n}\n\n.material-icons {   \n  font-family: 'Material Icons' !important;\n}\n\n.marginNone {\n  margin: 0;\n}\n\n.maxX {\n  max-width: 100vw;\n}\n\n.maxY {\n  max-height: 100vh;\n}\n\n.maxY85 {\n  max-height: 85vh;\n}\n\n.minHeightShrink {\n  min-height: 1rem !important;\n}\n\n#notify {\n  position: fixed;\n  padding: 10px 20px;\n  font-weight: bold;\n  text-transform: capitalize;\n  border-radius: 2px;\n  right: 10px;\n  bottom: 10px;\n  z-index: 1000;\n}\n\n.overflowYAuto {\n  overflow-y: auto;\n}\n\n.overflowHidden {\n  overflow: hidden;\n}\n\n.overflowYScroll {\n  overflow-y: scroll;\n}\n\n.pad5 {\n  padding: 5px !important;\n}\n\n.pad5X {\n  padding-left: 5px !important;\n  padding-right: 5px !important;\n}\n\n.pad5Y {\n  padding-top: 5px !important;\n  padding-bottom: 5px !important;\n}\n\n.pad10 {\n  padding: 10px !important;\n}\n\n.pad10Y {\n  padding-top: 10px !important;\n  padding-bottom: 10px !important;\n}\n.pad10X {\n  padding-left: 10px !important;\n  padding-right: 10px !important;\n}\n\n.pad15Y {\n  padding-top: 15px !important;\n  padding-bottom: 15px !important;\n}\n\n.pad15 {\n  padding: 15px !important;\n}\n\n.pad15X {\n  padding-left: 15px !important;\n  padding-right: 15px !important;\n}\n\n.padding {\n  padding: 30px !important;\n}\n\n.paddingX {\n  padding-left: 30px !important;\n  padding-right: 30px !important;\n}\n\n.padX {\n  padding: 0 30px !important;\n}\n\n.paddingY {\n  padding-top: 30px !important;\n  padding-bottom: 30px !important;\n}\n\n.padding0 {\n  padding: 0 !important;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n#plyNav * {\n  transition: all .4s ease;\n}\n\n#plyNav.isScrolled .padding {\n  padding: 10px 30px !important;\n}\n\n.plyLink *{\n  font-size: 14px;\n}\n\n.printShow {\n  display: none;\n}\n\n.proper {\n  text-transform: capitalize;\n}\n\n.radius {\n  border-radius: 3px;\n}\n\n.reveal {\n  border: 1px solid #f1f1f1;\n  background: #fff;\n  border-radius: 3px;\n  -webkit-box-shadow: 2px 2px 10px 5px rgba(,0,0,0.1);\n  -moz-box-shadow: 2px 2px 10px 5px rgba(0,0,0,0.1);\n  box-shadow: 2px 2px 10px 5px rgba(0,0,0,0.1);\n}\n\n.reveal * {\n  font-family: 'Roboto Mono', monospace !important;\n}\n\n.reveal:focus {\n  outline: none;\n}\n\n.reveal-overlay {\n  background-color: rgba(255,255,255,.4);\n}\n\n.row {\n  max-width: 100%;\n}\n\nselect {\n  background-image: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='24' viewBox='0 0 32 24'><polygon points='0,0 32,0 16,24' style='fill: #8080ff'></polygon></svg>\");\n  border: 0;\n}\n\nselect, input, textarea {\n  border-color: #ddd;\n  min-height: 50px !important;\n  box-shadow: none !important;\n  background-color: #f9f9f9;\n  margin: 0 !important;\n}\n\n.shadow {\n  box-shadow: 4px 4px 8px -3px rgba(17, 17, 17, .06);\n  z-index: 2050;\n}\n\n.shadowBottom {\n  box-shadow: 0px 4px 8px -3px rgba(17, 17, 17, .06);\n  /*z-index: 2050;*/\n  border-bottom: 1px solid #f1f1f1;\n}\n\n.shadowNone {\n  box-shadow: none;\n}\n\n.shrink, .slim {\n  min-height: auto !important;\n  width: auto !important;\n}\n\n.slide-fade-enter-active {\n  transition: all .3s ease;\n}\n.slide-fade-enter {\n  transform: translateX(10px);\n  opacity: 0;\n}\n\n.textTransformCapitalize, .capitalize {\n  text-transform: capitalize;\n}\n\n.uppercase {\n  text-transform: uppercase;\n}\n\n.textTransformNone {\n  text-transform: none;\n}\n\n.top0 {\n  top: 0;\n}\n\n.whiteSpaceNoWrap {\n  white-space: nowrap;\n}\n\n.z-top {\n  z-index: 1000;\n}\n\n@media print {\n  body {\n    font-size: 12pt;\n  }\n  a {\n    text-decoration: none;\n  }\n  .arrow {\n    font-size: 1em;\n  }\n  .off-canvas-content {\n    padding: 0 !important;\n  }\n  .printHide {\n     display: none !important;\n   }\n   .printShow {\n     display: inline-block !important;\n   }\n   .printBorderNone {\n     border: none !important;\n   }\n}"}],
    _schema: [{"propName":"name","propType":"string"},{"propName":"link","propType":"string"},{"propName":"sort","propType":"number"},{"propName":"_init","propType":"string"},{"propName":"public","propType":"boolean"},{"propName":"_schema","propType":"array","subSchema":"propName, propType, subSchema"},{"propName":"templates","propType":"array","subSchema":"name,text"},{"propName":"users","propType":"array","subSchema":"username"},{"propName":"siteId","propType":"string"},{"propName":"js","propType":"string"}],
    users: [{apps:['all'], username: 'Eiken'}],
    js: "function adjustPlyHeightObjOnChange(vm, prop) {\n  ply.height[prop] = vm.$el.clientHeight;\n  onElementHeightChange(vm.$el, function(){\n    ply.height[prop] = vm.$el.clientHeight;\n  });\n}\nfunction arrayCreate(length) {\n  var arr = [];\n  for (var i = 0; i < length; i++) arr.push(i);\n  return (arr);\n}\nfunction createComponent(name, obj) {\n  var vue;\n  var tmplt = {};\n  if(obj.templates) {\n    for(var t in obj.templates) tmplt[obj.templates[t].name] = obj.templates[t].text;\n  }\n  obj.template = obj.template || tmplt.main || \"<div>No template yet</div>\";\n  try {\n    if(ply.site.url !== 'plysheet' || obj.name !== 'sheets') eval(obj.js);\n  } catch(error) {\n    console.log(error);\n  }\n  vue = vue || {};\n  obj.mixins = [plyMix, vue];\n  Vue.component('ply-'+name, obj);  \n}\nfunction cssDisable(boolean) {\n  var $cssSheet = document.getElementById('plyStyle'),\n      $cssGlobal = document.querySelector('.plyStyle');\n  $cssSheet.disabled = boolean;\n  $cssGlobal.disabled = boolean;\n}\nfunction extractUserSheets(arrSheets, next) {\n  var userSheets = [];\n  for(var i in arrSheets) {\n    var sheet = arrSheets[i],\n        userAuthorized;\n    if(User.username) {\n      userAuthorized = sheet.users.find({username: User.username || 'all'});\n    } else {\n      userAuthorized = sheet.users.find({username: User.username || 'public'});\n    }\n    if(userAuthorized.length > 0) userSheets.push(sheet);\n  }\n  next(userSheets);\n}\nfunction googleSheet(o) {\n  o.tab = o.tab || 1;\n  axios.get('https://spreadsheets.google.com/feeds/list/' + o.key + '/' + o.tab + '/public/values?alt=json')\n  .then(function(res){\n    for (var i=0; i<res.data.feed.entry.length; i++) {\n      for(var key in res.data.feed.entry[i]) {\n        if(key.includes(\"gsx$\")) {\n          res.data.feed.entry[i][key.replace(\"gsx$\", '')] = res.data.feed.entry[i][key].$t;\n          delete res.data.feed.entry[i][key];\n        } else {\n          delete res.data.feed.entry[i][key];\n        }\n      }\n    }\n    if(o.loaded) o.loaded(res.data.feed.entry, o.name);        \n  });\n}\nfunction initAxios() {\n  api = axios.create({\n    baseURL: 'https://www.blockometry.com/'+ply.site.url+'/api/',\n    headers: {\n      token: window.sessionStorage.token,\n      userid: window.sessionStorage.userid,\n      'Pragma': 'no-cache'\n    }\n  });\n  api.interceptors.request.use(function (config){\n    // console.log(config);\n    return config;\n  });\n  api.interceptors.response.use(function (res) {\n    var rootUrl = (res.request.responseURL || '').split('/api/')[1].split('?')[0].split('/')[0],\n        http = res.config.method,\n        verb;\n    var methods = {\n      post: function() {\n        verb = 'Created new ';    \n      },\n      put: function() {\n        verb = 'Updated ';\n      },\n      delete: function() {\n        verb = 'deleted '; \n      }\n    };\n    if(methods[http]) {\n      methods[http]();\n      res.data = res.data || {};\n      ply.notify = verb + ' ' + (res.data.name || res.data._id) + ' to ' + rootUrl + '!';\n    }\n    return res;\n  });\n  api.getAll = function(url, o) {\n    o.data = [];\n    function appendSkipParam() {\n      var grammar = '?';\n      if(url.includes('?')) grammar = '&';\n      return grammar + 'limit='+(o.chunk || 5000)+'&skip=' + (o.data.length);\n    }\n    function getChunk(done) {\n      api.get(url+appendSkipParam()).then(function(res){\n        o.data = o.data.concat(res.data);\n        updateProgress();\n        if(notFinishedYet()) {\n          if(o.fn) o.fn(res.data);\n          getChunk();\n        } else {\n          if(o.fn) o.fn(res.data);\n          if(o.done) o.done(o.data);\n          ply.progress = false;\n        }\n      });\n    }\n    function getDbCount(next) {\n      axios.get('https://www.blockometry.com/'+ply.site.url+'/dbCount/'+url).then(function(res){\n        o.dbCount = res.data*1;\n        next();\n      });\n    }\n    function notFinishedYet() {\n      if(o.max) {\n        return o.data.length < (o.max); \n      } else {\n        return o.data.length < o.dbCount;\n      }\n    }\n    function updateProgress() {\n      if(o.progress !== false || o.progress === undefined) {\n        ply.progress = (o.data.length/(o.max || o.dbCount*1))*100;\n      }\n    }\n    updateProgress();\n    getDbCount(function(){\n      getChunk();\n    });\n  };\n}\nfunction initSheets(arrSheets, next) {\n  ply.sheets = arrSheets.sortByKey('sort');\n  components._init();\n  ply.link = arrSheets[0].name;\n  if(next) next();\n}\nfunction initSite() {\n  if(!site) {\n    site = new Vue({\n      data: {\n        ply: ply\n      },\n      el: '#app',\n      mounted: function() {\n        $(this.$el).foundation();\n      },\n      template: `\n        <div class=\"off-canvas-wrapper\">\n          <div class=\"off-canvas position-right bgBleach\" id=\"offCanvas\" data-off-canvas>\n            <ply-links classes=\"displayBlock pad15 capitalize bold\"></ply-links>\n          </div>\n          <div class=\"off-canvas-content\" data-off-canvas-content>\n            <div class=\"grid-x\">\n              <div class=\"cell small-12\">\n                <ply-notify v-if=\"ply.notify\"></ply-notify>\n                <ply-sticky><ply-topBar id=\"plyNav\"></ply-topBar></ply-sticky>\n                <transition name=\"slide-fade\"><ply-progress v-if=\"ply.progress !== false\"></ply-progress></transition>\n                <ply-sheet></ply-sheet>\n              </div>\n            </div>            \n          </div>\n        </div>\n      `\n    });\n  }  \n}\nfunction initUser() {\n  User.token = window.sessionStorage.token;\n  User._id = window.sessionStorage.userid;\n  User.username = window.sessionStorage.username || 'public';\n  ply.user = User;  \n}\nfunction onElementHeightChange(elm, callback){\n  var lastHeight = elm.clientHeight, newHeight;\n  (function run(){\n    newHeight = elm.clientHeight;\n    if( lastHeight != newHeight )\n      callback();\n    lastHeight = newHeight;\n    if( elm.onElementHeightChangeTimer )\n      clearTimeout(elm.onElementHeightChangeTimer);\n    elm.onElementHeightChangeTimer = setTimeout(run, 200);\n  })();\n}\nfunction phone(val) {\n  var input = (val || '').toString().replace(/[^\\d]*/g, \"\");\n  return input.replace(/(\\d{3})(\\d{3})(\\d{4}).*/g, \"($1) $2-$3\");\n}\nfunction price(value) {\n  if((value*1).toFixed(2) === \"NaN\" || !value) value = 0;\n  value = (value*1).toFixed(2);\n  value = value.toString().split(\".\");\n  value[0] = value[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  value = value.join('.');\n  return \"$\" + value;\n}\nfunction proper(value) {\n  if (value === 0) value = '0';\n  if (!value) return '';\n  value = value.toString();\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}\nfunction saveJSON(data, filename){\n  if(!data) {\n    console.error('No data');\n    return;\n  }\n  filename = filename || 'console.json';\n  if(typeof data === \"object\"){\n    data = JSON.stringify(data, undefined, 4);\n  }\n  var blob = new Blob([data], {type: 'text/json'}),\n      e    = document.createEvent('MouseEvents'),\n      a    = document.createElement('a');\n  a.download = filename;\n  a.href = window.URL.createObjectURL(blob);\n  a.dataset.downloadurl =  ['text/json', a.download, a.href].join(':');\n  e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n  a.dispatchEvent(e);\n}\nfunction splitArrIntoChunks(arr, n) {\n  if ( !arr.length ) return [];\n  return [ arr.slice( 0, n ) ].concat( splitArrIntoChunks(arr.slice(n), n) );\n}\nfunction stringToArray(str, strDelimiter) {\n  function prepareString(strData, delimeter) {\n    delimeter = (delimeter || \",\");\n    var objPattern = new RegExp((\n    // Delimiters.\n    \"(\\\\\" + delimeter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n    // Quoted fields.\n    \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\n    // Standard fields.\n    \"([^\\\"\\\\\" + delimeter + \"\\\\r\\\\n]*))\"), \"gi\");\n    var arrData = [[]];\n    var arrMatches = null;\n    while (arrMatches = objPattern.exec(strData)) {\n      var strMatchedDelimiter = arrMatches[1];\n      if (strMatchedDelimiter.length && (strMatchedDelimiter != delimeter)) {\n          arrData.push([]);\n      }\n      var strMatchedValue;\n      if (arrMatches[2]) {\n          strMatchedValue = arrMatches[2].replace(\n          new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\");\n      } else {\n          strMatchedValue = arrMatches[3];\n      }\n      arrData[arrData.length - 1].push(strMatchedValue);\n    }\n    return (arrData);\n  }\n  try {\n      JSON.parse(str);\n  } catch (e) {\n    var array = prepareString(str, strDelimiter);\n    var objArray = [];\n    for (var i = 1; i < array.length; i++) {\n      objArray[i - 1] = {};\n      for (var k = 0; k < array[0].length && k < array[i].length; k++) {\n        var key = array[0][k];\n        objArray[i - 1][key] = array[i][k];\n      }\n    }\n    return objArray;\n  }\n  return JSON.parse(str);\n}\nfunction whenTypingStops(fn) {\n  clearTimeout(ply.typeTimer);\n  ply.typeTimer = setTimeout(function () {\n    fn();\n  }, 500);  \n}\n\nif (!String.prototype.includes) {\n  String.prototype.includes = function() {\n    'use strict';\n    return String.prototype.indexOf.apply(this, arguments) !== -1;\n  };\n}\nif (!String.prototype.excludes) {\n  String.prototype.excludes = function() {\n    'use strict';\n    return String.prototype.indexOf.apply(this, arguments) === -1;\n  };\n}\nfunction addMethodToArray(name, fn) {\n  Object.defineProperty(Array.prototype, name, {\n    enumerable: false,\n    writable: true,\n    value: fn\n  });  \n}\nfunction itemMatches(item, filter) {\n  var matches = [];\n  for(var key in filter) matches.push(filter[key] === item[key]);\n  return matches.indexOf(false) === -1; \n}\naddMethodToArray('find', function(filter){\n  var match = [];\n  for (i = 0; i<this.length; i++) {\n    if(itemMatches(this[i], filter)) match.push(this[i]);\n  }\n  return match;  \n});\naddMethodToArray('findOne', function(filter){\n  var match = null;\n  for (i = 0; i<this.length; i++) {\n    if(itemMatches(this[i], filter)) {\n      match = this[i];\n      i = this.length;\n    }\n  }\n  return match;\n});\naddMethodToArray('loop', function(o){\n  var array = this,\n      arr = arrayCreate(this.length),\n    next = function(vm) {\n      if (arr.length === 0) {\n        if(vm && vm.progress) vm.progress = '';\n        if (o.done) o.done();\n      } else {\n        iterate();\n      }\n    },\n    iterate = function() {\n      var i = arr.shift();\n      if(array[i]) {\n        o.fn(i, array[i], function(vm){\n          if(vm) vm.progress = ((i+1) / array.length) * 100;\n          next(vm);\n        });\n      } else {\n        next();\n      }\n    };\n  iterate();\n});\naddMethodToArray('sortByKey', function(key) {\n    return this.sort(function(a, b) {\n        var x = a[key];\n        var y = b[key];\n        if (typeof x == \"string\") x = (\"\"+x).toLowerCase();\n        if (typeof y == \"string\") y = (\"\"+y).toLowerCase();\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n});\n\nVue.filter('proper', function(value) {\n  return proper(value);\n});\nVue.filter('price', function(value) {\n  return price(value)\n});\nVue.filter('phone', function(value) {\n  return phone(value);\n});\n\nvar l1 = new Vue({\n  el: \"#apps\",\n  data: {\n    url: \"\",\n    alert: {},\n    notify: \"notifyi\",\n    nav: {\n      top: {\n        css: {},\n        links: [{ui:\"\", sheeturl: \"\"}]\n      },\n      left: {},\n      right: {},\n      bottom: {}\n    },\n    user: {}\n  },\n  methods: {\n    run: function() {\n      console.log(\"l1 is running.\")\n    },\n    login: function(){console.log('login')},\n    signup: function(){},\n    signout: function(){},\n    image_uploader: function(){},\n    file_uploader: function(){}\n  },\n  template: `<div>{{ notify }}<hr><div id=\"hola\"></div></div>`\n});\n\nVue.component(\"hello-world\", {\n  template: \"<div>hello world</div>\"\n});\n\nvar l2 = new Vue({\n  el: \"#hola\",\n  data: {\n    active: \"hello-world\",\n    ace: {},\n    query: {},\n    upload: {},\n    ui: {\n      run: function() {\n        // eval(sheet.js);\n        // createUserObj(function(userObj){\n        //   resetL3(userObj);\n        //   l3 = new Vue(l3);\n        // });\n        \n        var love = {\n          data: {\n            message: \"loving it\"\n          },\n          template: \"<div>yup {{ message }}</div>\"\n        }\n        love.data = function(){\n          return love.data\n        };\n        \n        Vue.component(\"love-it\", love);\n        \n        sheetJS.catalog();\n        l3 = {\n          beforeCreate: function() {\n           console.log(\"before Creating\") \n          },\n          car: \"hyundai\",\n          methods:  {\n            lookup: function() {\n              console.log(\"looking up\")\n            }\n          }\n        };\n        Vue.component(\"l3-test\", {\n          beforeCreate: l3.beforeCreate,\n          data: function() {\n            return {\n              l3: l3,\n              db: \"exhaustbarn db\"\n            }\n          },\n          methods: l3.methods,\n          template: `<div>Exhaust Barn lives here. Current car is {{ l3.car }} <a @click=\"lookup\">lookup</a></div>`\n        });\n        l2.active = \"l3-test\";  \n      },\n      css: \"\",\n      html: \"\",\n      js: \"\",\n      templates: [{name: \"\", text: \"\"}]\n    },\n    google_sheets: {},\n    db: {\n      users: \"\",\n      url: \"\",\n      drop_db: \"\"\n    }\n  },\n  methods: {\n    run: function(name) { \n      l2[name].run();\n    }\n  },\n  template: `<div>this is l2<a @click=\"run('ui')\">run</a><componet :is=\"active\"></component></div>`\n});\n\nvar l3 = {\n  vehicle: {\n    year: \"\",\n    make: \"\",\n    model: \"\"\n  } \n};\n\nl4 = {\n  \"ui-section\": \"\",\n  \"ui-sticky\": \"\",\n  \"year-make-model\": \"component\"\n};\n\nl1.run();\n\nvar sheets = ply.sheets;\nply.ace = {};\nply.component = '';\nply.dataRaw = null;\nply.height = {};\nply.init = function() {\n  initUser();\n  initAxios();\n  extractUserSheets(sheets, function(extractedSheets){\n    if(extractedSheets.length === 0) {\n      axios.get('https://www.blockometry.com/plysheet/api/sheets').then(function(res){\n        extractUserSheets(res.data, function(extractedSheets2){\n          initSheets(extractedSheets2, initSite);\n        });\n      });\n    } else {\n      initSheets(extractedSheets, initSite);\n    }\n  });\n};\nply.notify = false;\nply.progress = false;\nply.screen = function() {\n  return Foundation.MediaQuery.current;\n};\nply.sticky = { top: 0, z: 1000 };\nply.typeTimer = null; //for when typing stops\nply.url = window.location.href;\n\nvar tmplts = {};\nfor(var i in ply.sheets) {\n  for(var t in ply.sheets[i].templates) {\n    tmplts[ply.sheets[i].templates[t].name] = ply.sheets[i].templates[t].text;\n  }\n}\n\nvar api,\n    site;\n\nvar Sheet = {\n  current: function(){\n    return ply.sheets.findOne({name:ply.link});\n  }\n};\nvar User = {\n  login: function(user) {\n    axios.post('https://www.blockometry.com/plysheet/login', {\n      username: user.username,\n      password: user.password\n    }).then(function(res) {\n      if(res.data.error) {\n        ply.notify = res.data.error;\n      } else {\n        window.sessionStorage.token = res.data.token;\n        window.sessionStorage.userid = res.data.userid;\n        window.sessionStorage.username = user.username;\n        ply.init();\n      }\n    });    \n  },\n  logout: function() {\n    sessionStorage.clear();\n    ply.init();\n  }\n};\nvar plyMix = {\n  computed: {\n    sheet: Sheet.current,\n    sheetComponent: function() {\n      return 'ply-sheet-' + this.sheet.name;\n    }\n  },\n  data: function() {\n    return {\n      ply: ply\n    };\n  },\n  methods: {\n    saveJSON: saveJSON\n  }\n};\n\nvar components = {\n  _init: function(){\n    for(var key in this) {\n      if(key.excludes('_')) createComponent(key, this[key]);\n    }\n  },\n  'ace-add-template': {\n    data: function() {\n      return {\n        tmplt: {\n          name: '',\n          text: ''\n        }\n      }\n    },\n    methods: {\n      createNewTemplate: function() {\n        console.log('hi')\n        this.sheet.templates.push(this.tmplt)\n      }\n    },\n    template: `\n      <div class=\"grid-x padding\">\n        <div class=\"cell small-12\">\n          <h6 class=\"bold colorBlue\">Template Name</h6>\n          <input v-model=\"tmplt.name\" type=\"text\" class=\"cell auto dotted\">\n          <br>\n          <button @click=\"createNewTemplate\" class=\"button large expandX padding colorBlack bold\"><i class=\"fi-save colorDarkGreen\"></i> Save</button>\n        </div>\n      </div>\n    `\n  },\n  'ace-selector': {\n    methods: {\n      launch: function(obj) {\n        ply.ace = obj;\n        ply.ace.url = ply.url+'/api/sheets/'+this.sheet._id;\n        ply.component = 'ply-ace-editor';\n      }\n    },\n    template: `\n    <div class=\"grid-x\">\n      <a @click=\"launch({text: sheet.js, data: sheet, prop: 'js', name: 'javascript'})\" class=\"button cell small-4 bgBleach padding\">\n        <b class=\"fontMedium material-icons colorYellow bold\">code</b> \n        <br> \n        <b class=\"colorBlack\">Javascript</b>\n      </a>\n      <a @click=\"launch({text: tmplt.text, data: tmplt, prop: 'text', name: tmplt.name})\" v-for=\"(tmplt, i) in sheet.templates\" class=\"button cell small-4 bgBleach padding\">\n        <b v-if=\"tmplt.name.includes('css')\" class=\"fontMedium fi-css3 colorRed bold\"></b>\n        <b v-else class=\"fontMedium fi-html5 colorBluePastel bold\"></b>\n        <br> \n        <b class=\"colorBlack\">{{ tmplt.name }}</b>\n      </a>\n      <a @click=\"ply.component='ply-ace-add-template'\" class=\"button cell small-4 bgBleach padding\">\n        <i class=\"fontMedium fi-plus colorDarkGreen bold\"></i>\n        <br>\n        <b class=\"colorBlack\">New Template</b>\n      </a>\n    </div>\n    `     \n  },\n  'ace-editor': {\n    beforeDestroy: function() {\n      if(ply.ace.url) this.save();\n      ply.ace = {};\n    },\n    methods: {\n      initAce: function() {\n        ply.ace.$el = ace.edit(this.$el);\n        this.setMode();\n        this.setOptions();\n        ply.ace.$el.getSession().setMode('ace/mode/' + ply.ace.mode); \n        ply.ace.$el.$blockScrolling = Infinity;\n      },\n      setMode: function() {\n        var modes = ['javascript', 'css', 'html'];\n        ply.ace.mode = 'html';\n        for(var i in modes) if(ply.ace.name.includes(modes[i])) ply.ace.mode = modes[i];\n      },\n      setOptions: function() {\n        var options = {\n          fontSize: '13pt',\n          highlightActiveLine: false,\n          showPrintMargin: false,\n          tabSize: 2,\n          theme: 'ace/theme/clouds',\n          useSoftTabs: true,\n          wrap: true                    \n        };\n        if (ply.ace.mode === 'javascript') options.theme = 'ace/theme/chrome';\n        ply.ace.$el.setOptions(options);\n      },\n      save: function() {\n        this.updateAceData(ply.ace.$el.getValue());\n        api.put(ply.ace.url, this.sheet).then(function(){\n          ply.notify = 'saved!';\n        });\n      },\n      updateAceData: function(text) {\n        ply.ace.data[ply.ace.prop] = text;\n      }\n    },\n    mounted: function() {\n      this.initAce();\n    },\n    template: '<div class=\"expandY ace\" @keyup.alt.enter=\"save\">{{ ply.ace.text }}</div>'\n  },\n  backEnd: {\n    beforeCreate: function() {\n      cssDisable(true);\n    },\n    template: `\n    <div class=\"grid-x\">\n      <ply-form class=\"cell medium-4 padding\"></ply-form>\n      <div class=\"cell medium-8 padding\">\n        <ply-obj v-for=\"(obj, i) in $parent.db\" :obj=\"obj\" :key=\"obj._id\" :settings=\"{collapsed: false, field:obj.name, i:i, root:obj, url:sheet.name+'/'+obj._id}\"></ply-obj>\n      </div>\n    </div>\n    `    \n  },\n  brain: {\n    created: function() {\n      var vm = this;\n      vm.getClientToken(function(token){\n        vm.createDropin(token);\n      });\n    },\n    data: function() {\n      return {\n        currentPage: \"customer\",\n        formPages: {\n          customer: {\n            firstName: \"Drew\",\n            lastName: \"Smith\",\n            company: \"Braintree\",\n            phone: \"312-555-1234\",\n            website: \"http://www.example.com\",\n            email: \"drew@example.com\"            \n          },\n          billing: {\n            firstName: \"Paul\",\n            lastName: \"Smith\",\n            company: \"Braintree\",\n            streetAddress: \"1 E Main St\",\n            postalCode: \"60622\"           \n          },\n          shipping: {\n            firstName: \"Jen\",\n            lastName: \"Smith\",\n            company: \"Braintree\",\n            streetAddress: \"1 E 1st St\",\n            postalCode: \"60103\"\n          }\n        }\n      }\n    },\n    methods: {\n      addCustomerInfoToPayload: function(payload) {\n        for(var page in this.formPages) payload[page] = this.formPages[page];      \n      },\n      chargeCard: function() {\n        var vm = this;\n        ply.amount = 222;\n        this.dropinInstance.requestPaymentMethod(function (err, payload) {\n          if (err) {\n            console.log(err);\n            return;\n          }\n          payload.amount = ply.amount;\n          vm.addCustomerInfoToPayload(payload);\n          axios.post(\"https://www.blockometry.com/plysheet/brain\", payload).then(function(res){\n            console.log({\n              res: res,\n              payload: payload\n            });\n          });\n        });        \n      },\n      createDropin: function(token, next) {\n        var vm = this;\n        braintree.dropin.create({\n          authorization: token,\n          container: '#dropin-container'\n        }, function (err, dropinInstance) {\n          vm.dropinInstance = dropinInstance;\n        });\n      },\n      getClientToken: function(next) {\n        axios.get(\"https://www.blockometry.com/plysheet/brain\").then(function(res){\n          next(res.data.token);\n        });\n      },\n      nextPage: function() {\n        var sequence = [\"customer\", \"billing\", \"shipping\", \"charge\"];\n        var currentIndex = sequence.indexOf(this.currentPage);\n        this.currentPage = sequence[currentIndex+1];\n      }\n    },\n    template: `\n    <div class=\"grid-x\">\n    <div v-show=\"currentPage==='charge'\" id=\"dropin-container\" class=\"cell small-12\"></div>\n    <button v-if=\"currentPage==='charge'\" id=\"submit-button\" @click=\"chargeCard\" class=\"button large expanded bgJet\">Purchase</button>\n    <div v-else class=\"cell small-12\">\n      <transition name=\"slide-fade\">\n      <div v-for=\"(pageObj, pageName) in formPages\" v-if=\"currentPage===pageName\" class=\"grid-x bgBleach padding border\">\n        <div class=\"cell small-12\">\n          <h4>{{ pageName | proper }} Info</h4>\n        </div>\n        <div v-for=\"(val, key) in formPages[pageName]\" class=\"cell small-12 medium-6 pad15\">\n          <div class=\"grid-x\">\n            <div class=\"cell small-12 proper\">{{ key }}: </div>\n            <div class=\"cell small-12\">\n              <input type=\"text\" v-model=\"formPages[pageName][key]\">\n            </div>\n          </div>\n        </div>\n      </div>\n      </transition>\n      <button v-if=\"currentPage!=='charge'\" class=\"button large expanded bgJet\" @click=\"nextPage\">Next <i class=\"fi-arrow-right\"></i></button>\n    </div>\n    </div>\n    `\n  },\n  form: {\n    computed: {\n      obj: function() {\n        var obj = {};\n        for(var i in this.sheet._schema) {\n          var sch = this.sheet._schema[i];\n          if((sch.propType || '').toLowerCase() === 'array') {\n            var subObj = {};\n            var subschema = (sch.subSchema || 'test').split(',');\n            for(var x in subschema) subObj[subschema[x]] = '';\n            obj[sch.propName] = [subObj];\n          } else {\n            obj[sch.propName] = '';\n          }\n        }\n        return obj;\n      }\n    },\n    methods: {\n      save: function() {\n        api.post(this.sheet.name, this.obj).then(function(res){\n          console.log('saved!');\n        });\n      }\n    },\n    template: `\n      <form>\n        <ply-obj :obj=\"obj\" :settings=\"{nowrap: true}\"></ply-obj>\n        <a @click=\"save\" class=\"button large\">save</a>  \n      </form>\n    `    \n  },\n  frontEnd: {\n    beforeCreate: function() {\n      createComponent('sheet-'+Sheet.current().name, Sheet.current());\n    },\n    created: function() {\n      cssDisable(false);\n      this.enableCssFromSheet();\n    },\n    data: function() {\n      return {\n        db: this.$parent.db,\n        show: true\n      };\n    },\n    methods: {\n      enableCssFromSheet: function() {\n        var $el = document.getElementById('plyStyle'),\n            css = this.sheet.templates.findOne({name: 'css'}) || {};\n        $el.innerHTML = css.text;\n      }\n    },\n    template: '<component v-if=\"show\" :is=\"sheetComponent\"></component>',\n    watch: {\n      'sheet.name': function() {\n        this.show = false;\n        createComponent('sheet-'+Sheet.current().name, Sheet.current());\n        this.show = true;\n        this.enableCssFromSheet();\n      }\n    }    \n  },\n  links: {\n    props: ['classes'],\n    template: `\n      <div>\n        <a v-for=\"sheet in ply.sheets\" @click=\"ply.link=sheet.name\" :class=\"['plyLink', classes]\" v-html=\"sheet.link\" data-close></a> \n        <a v-if=\"ply.user._id\" :class=\"['plyLink', classes]\" @click=\"ply.user.logout\">logout</a>\n        <slot></slot>\n      </div>\n    `\n  },\n  loader: {\n    template: `\n    <div>\n      <?xml version=\"1.0\" encoding=\"utf-8\"?><svg width='120px' height='120px' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" class=\"uil-gear\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"none\" class=\"bk\"></rect><path d=\"M75,50.5l5-1.5c-0.1-2.2-0.4-4.3-0.9-6.3l-5.2-0.1c-0.2-0.6-0.4-1.1-0.6-1.7l4-3.3c-0.9-1.9-2-3.8-3.2-5.5L69.2,34 c-0.4-0.5-0.8-0.9-1.2-1.3l2.4-4.6c-1.6-1.4-3.3-2.7-5.1-3.8l-3.7,3.6c-0.5-0.3-1.1-0.5-1.6-0.8l0.5-5.2c-2-0.7-4-1.3-6.2-1.6 l-2.1,4.8c-0.6-0.1-1.2-0.1-1.8-0.1l-1.5-5c-2.2,0.1-4.3,0.4-6.3,0.9l-0.1,5.2c-0.6,0.2-1.1,0.4-1.7,0.6l-3.3-4 c-1.9,0.9-3.8,2-5.5,3.2l1.9,4.9c-0.5,0.4-0.9,0.8-1.3,1.2l-4.6-2.4c-1.4,1.6-2.7,3.3-3.8,5.1l3.6,3.7c-0.3,0.5-0.5,1.1-0.8,1.6 l-5.2-0.5c-0.7,2-1.3,4-1.6,6.2l4.8,2.1c-0.1,0.6-0.1,1.2-0.1,1.8l-5,1.5c0.1,2.2,0.4,4.3,0.9,6.3l5.2,0.1c0.2,0.6,0.4,1.1,0.6,1.7 l-4,3.3c0.9,1.9,2,3.8,3.2,5.5l4.9-1.9c0.4,0.5,0.8,0.9,1.2,1.3l-2.4,4.6c1.6,1.4,3.3,2.7,5.1,3.8l3.7-3.6c0.5,0.3,1.1,0.5,1.6,0.8 l-0.5,5.2c2,0.7,4,1.3,6.2,1.6l2.1-4.8c0.6,0.1,1.2,0.1,1.8,0.1l1.5,5c2.2-0.1,4.3-0.4,6.3-0.9l0.1-5.2c0.6-0.2,1.1-0.4,1.7-0.6 l3.3,4c1.9-0.9,3.8-2,5.5-3.2L66,69.2c0.5-0.4,0.9-0.8,1.3-1.2l4.6,2.4c1.4-1.6,2.7-3.3,3.8-5.1l-3.6-3.7c0.3-0.5,0.5-1.1,0.8-1.6 l5.2,0.5c0.7-2,1.3-4,1.6-6.2l-4.8-2.1C74.9,51.7,75,51.1,75,50.5z M50,65c-8.3,0-15-6.7-15-15c0-8.3,6.7-15,15-15s15,6.7,15,15 C65,58.3,58.3,65,50,65z\" fill=\"#000000\"><animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 50 50\" to=\"90 50 50\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform></path></svg>\n    </div>\n    `  \n  },\n  login: {\n    data: function() {\n      return {\n        user: {\n          username: '',\n          password: ''\n        },\n        message: ''\n      }\n    },\n    methods: {\n      login: function() {\n        User.login(this.user);\n      }\n    },\n    template: `\n    <form class=\"padding\">\n      <ply-obj :obj=\"user\" :settings=\"{nowrap:true}\"></ply-obj>\n      <transition name=\"slide-fade\">\n      <div v-if=\"message !== ''\" class=\"expandX marginY bgRed colorBleach border-bottom-none pad10\"><b>{{ message }}</b></div>\n      </transition>\n      <button @click.prevent=\"login\" class=\"button large expanded padding bgWhite marginY colorBlack\"><b>Login <i class=\"fi-arrow-right colorBlue\"></i></b></button>\n    </form>\n    `\n  },\n  notify: {\n    created: function() {\n      setTimeout(function(){ ply.notify = false }, 1500);\n    },\n    template: `\n      <transition name=\"slide-fade\">\n      <div id=\"notify\" class=\"bgJet\">{{ ply.notify }}</div>\n      </transition>\n    `\n  },\n  obj: {\n    data: function() {\n        return {\n          open: (this.set || {}).collapsed,\n          set: this.settings || {}\n        };\n      },\n    methods: {\n      _delete: function() {\n        if(this.set.url) {\n          if(confirm('You sure?')) {\n            if(this.sheet.name === 'sheets') {\n              if(confirm('You sure? You will lose this schema.')) {\n                api.delete(this.set.url);\n              }\n            }\n            api.delete(this.set.url);\n          }\n        }\n      },\n      _save: function() {\n        if(this.settings.url) {\n          var vm = this;\n          api.put(this.settings.url, this.set.parent || this.obj).then(function(res){\n            vm.set = vm.set || {};\n            vm.set.parent = vm.set.parent || vm.obj;\n          });      \n        }\n      },\n      copy: function() {\n        this.$parent.obj.splice((this.settings.field*1)+1, 0, JSON.parse(JSON.stringify(this.obj)));\n        this.$parent.$forceUpdate();\n        if(this.set.url) this._save();\n      },\n      remove: function() {\n        this.$parent.obj.splice(this.settings.field, 1);\n        this.$parent.$forceUpdate();\n        if(this.set.url) this._save();\n      },\n      toggle: function() {\n        this.settings.collapsed = !this.settings.collapsed;\n      }\n    },\n    props: ['obj', 'settings'],\n    template: `\n      <div class=\"grid-x\">\n        <div v-if=\"!set.nowrap\" @click=\"_save\" class=\"cell shrink\">\n          <transition name=\"slide-fade\">\n          <a v-if=\"set.collapsed!==open\" class=\"material-icons bold colorBluePastel arrow\">&#xE313;</a>\n          </transition>\n          <transition name=\"slide-fade\">\n          <a v-if=\"set.collapsed===open\" class=\"material-icons bold colorBluePastel arrow\">&#xE315;</a>\n          </transition>\n        </div>\n        <div class=\"cell auto\">\n          <div class=\"grid-x\">\n            <a class=\"colorBlack cell small-12\"><b @click=\"toggle\" v-if=\"obj.length\" class=\"colorBlue\">{{ obj.length }}</b> <b @click=\"toggle\" v-html=\"set.field || ''\"></b> <b v-if=\"!set.parent && set.url\" @click=\"_delete\" class=\"fi-trash colorRed\"></b> <b v-if=\"set.array\" @click=\"copy\" class=\"fi-page-copy colorBlue\"></b> <b v-if=\"set.array\" @click=\"remove\" class=\"fi-x-circle colorRed\"></b></a>\n          </div>\n          <div v-if=\"!set.collapsed\" v-for=\"(value, key) in obj\" class=\"grid-x\">\n            <div class=\"cell small-12\">\n              <ply-obj v-if=\"typeof value === 'object'\" :obj=\"obj[key]\" :settings=\"{array: Array.isArray(obj), collapsed:true, field: key.toString(), url: set.url, parent: set.parent || obj}\"></ply-obj>\n              <ply-objProp v-else :obj=\"obj\" :prop=\"key\"></ply-objProp>    \n            </div> \n          </div>\n        </div>\n      </div>\n    `\n  },\n  objProp: {\n    data: function() {\n        return {\n          exc: ['_id', '__v', 'userId', 'plyCollapsed', 'plyUrl', 'plyHide', '__proto__']\n        };\n      },\n      methods: {\n        validated: function() {\n          return this.exc.indexOf(this.prop) === -1;\n        }\n      },\n      props: ['obj', 'prop'],\n      template: `\n        <div v-if=\"validated()\" class=\"grid-x\">\n          <div class=\"cell shrink pad5X bold colorGrey\" v-html=\"prop + ': '\"></div>\n          <input v-if=\"obj[prop].length < 20\" type=\"text\" class=\"cell auto dotted minHeightShrink\" v-model=\"obj[prop]\">\n          <textarea v-else v-model=\"obj[prop]\" class=\"cell auto dotted\"></textarea>\n        </div>\n      `    \n  },\n  panel: {\n    template: `\n    <div class=\"cell borderRightDotted small-12\"><slot></slot></div>\n    `\n  },\n  progress: {\n    template: `\n    <div class=\"progress marginNone bgEgg\" role=\"progressbar\" tabindex=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n      <div class=\"progress-meter\" :style=\"'width:'+ply.progress+'%'\"></div>\n    </div>\n    `\n  },\n  s: {\n    methods: {\n      parentProps: function(computedStyle, name) {\n        var o = {\n      \t\ttop: parseInt(computedStyle.getPropertyValue(name+\"-top\")),\n      \t\tright: parseInt(computedStyle.getPropertyValue(name+\"-right\")),\n      \t\tbottom: parseInt(computedStyle.getPropertyValue(name+\"-bottom\")),\n      \t\tleft: parseInt(computedStyle.getPropertyValue(name+\"-left\"))\n        };\n        for(var k in o) if(isNaN(o[k])) o[k] = 0;\n        return o;\n      },\n      calculateInnerDimensions: function(computedStyle){\n      \tvar width = parseInt(computedStyle.getPropertyValue(\"width\")),\n      \t    height = parseInt(computedStyle.getPropertyValue(\"height\")),\n      \t    pad = this.parentProps(computedStyle, 'padding'),\n      \t    border = this.parentProps(computedStyle, 'border'),\n      \t    parentBoxSizing = computedStyle.getPropertyValue(\"box-sizing\");\n      \tif(parentBoxSizing == \"border-box\"){\n      \t\twidth = width - (pad.left + pad.right + border.left + border.right);\n      \t\theight = height - (pad.top + pad.top + border.top + border.bottom);\n      \t} \n      \treturn { width: width, height: height };\n      },\n      bigText: function(element) {\n      \tvar style = element.style,\n      \t    computedStyle = window.getComputedStyle(element.parentNode, null),\n      \t    parentStyle = element.parentNode.style;\n      \tstyle.visibility = \"hidden\";\n      \tstyle.display = \"inline-block\";\n      \tstyle.clear = \"both\";\n      \tstyle.fontSize = \"800px\";\n        style.whiteSpace = \"nowrap\";\n      \tvar pad = this.parentProps(computedStyle, 'padding'),\n      \t    parentInnerDimensions = this.calculateInnerDimensions(computedStyle),\n      \t    parentInnerWidth = parentInnerDimensions.width,\n      \t    parentInnerHeight = parentInnerDimensions.height,\n      \t    box = { width: element.offsetWidth, height: element.offsetHeight },\n          \twidthFactor = (parentInnerWidth - pad.left - pad.right) / box.width,\n          \theightFactor = (parentInnerHeight - pad.top - pad.bottom) / box.height,\n          \tlineHeight;\n      \tif (widthFactor < heightFactor)\n      \t\tlineHeight= Math.floor(widthFactor * 1000);\n      \telse if (widthFactor >= heightFactor)\n      \t\tlineHeight= Math.floor(heightFactor * 1000);\n      \tvar fontSize = lineHeight * 0.8;\n        style.fontSize = Math.floor(fontSize) + \"px\";\n        style.fontSize = Math.floor(fontSize) + \"px\";\n      \tstyle.lineHeight = Math.floor(fontSize) + \"px\";\n      \tstyle.visibility = \"visible\";\n      \treturn element;\n      }\n    },\n    mounted: function() {\n      this.bigText(this.$el);\n    },\n    template: '<div><slot></slot></div>'\n  },\n  settings: {\n    components: {\n      'app-buttons': {\n        data: function() {\n          return {\n            'drop database': {\n              component: 'db-drop',\n              class: 'fi-trash colorRed'\n            },\n            'sheet users': {\n              component: 'sheet-users',\n              class: 'fi-torso colorBlack'\n            }\n          }\n        },\n        props: ['parent'],\n        template: `\n          <div class=\"grid-x bold text-center proper\">\n            {{ _self.data }}\n            <div v-for=\"(obj, name) in _self._data\" class=\"cell small-4 padding\">\n              <a @click=\"parent.component=obj.component\" class=\"button padding colorBlack\">\n                <b :class=\"obj.class + ' fontMedium'\"></b> <br> {{ name }}\n              </a> \n            </div>\n          </div>\n        `\n      },\n      'db-drop': {\n        data: function(){\n          return {\n            sheetName: ''\n          }\n        },\n        methods: {\n          drop: function() {\n            if(confirm('You sure?')) {\n              axios.post('https://www.blockometry.com/'+ply.site.url+'/dbDrop/'+this.sheetName).then(function(res){\n                console.log(res);\n              });\n            }\n          }\n        },\n        template: `\n          <div class=\"grid-x\">\n            <div class=\"cell small-12\">\n              <input type=\"text\" v-model=\"sheetName\">\n              <br>\n              <a @click=\"drop\" class=\"button large expanded bgWhite colorBlack bold\"><i class=\"fi-trash colorRed\"></i> Remove</a>\n            </div>\n          </div>\n        `\n      },\n      'sheet-users': {\n        methods: {\n          addUser: function() {\n            this.sheet.users.push({username: 'new user', apps: ['all']})\n          },\n          updateUsers: function() {\n            api.put('sheets/'+this.sheet._id, this.sheet);\n          }\n        },\n        mixins: [plyMix],\n        template: `\n        <div class=\"grid-x padding\">\n          <div v-for=\"(user, i) in sheet.users\" class=\"cell small-12 dotted padding\">\n            <b> Username:</b> <input type=\"text\" @blur=\"updateUsers\" v-model=\"user.username\">\n            <br>\n            <b>Apps:</b><input type=\"text\" @blur=\"updateUsers\" v-model=\"user.apps[0]\">\n          </div>\n          <div class=\"cell small-12 padding\">\n            <a @click=\"addUser\" class=\"button large expanded bgWhite colorBlack bold\"><i class=\"fi-plus colorDarkGreen\"></i> Add user</a>\n          </div>\n        </div>\n        `\n      }\n    },\n    data: function() {\n      return {\n        component: 'app-buttons'\n      }\n    },\n    template: `\n    <transition name=\"slide-fade\"><component :is=\"component\" :parent=\"_self\" class=\"padding\"></component></transition>\n    `\n  },\n  sheet: {\n    created: function() {\n      ply.sheetComponent = this;\n      this.init();\n    },\n    data: function() {\n      return {\n        db: []\n      };\n    },\n    methods: {\n      getDb: function() {\n        var vm = this;\n        vm.db = [];\n        if(this.sheet.name) {\n          api.get(this.sheet.name).then(function(res){\n            vm.db = res.data;\n          });\n        }\n      },\n      init: function() {\n        this.resetSticky();\n        ply.component = this.sheet._init;\n        this.getDb();        \n      },\n      resetSticky: function() {\n        ply.sticky = { top: 0, z: 1000 };\n      }\n    },\n    template: `\n    <div class=\"grid-x\">\n      <div class=\"cell small-12\">\n        <ply-tools></ply-tools>\n        <transition name=\"slide-fade\">\n        <component :is=\"ply.component || 'ply-backEnd'\"></component>\n        </transition>\n      </div>\n    </div>\n    `,\n    watch: {\n      'sheet.name': function() {\n        this.init();\n      },\n      'ply.component': function(component) {\n        if(component !== 'ply-frontEnd') cssDisable(true);\n      }\n    }\n  },\n  slide: {\n    mounted: function() {\n      $(this.$el).foundation();\n    },\n    props: ['arrows'],\n    template: `\n      <div class=\"orbit\" role=\"region\" aria-label=\"mainSlide\" data-orbit>\n        <div class=\"orbit-wrapper\">\n          <div v-if=\"arrows !== 'false'\" class=\"orbit-controls\">\n            <button class=\"orbit-previous\"><i class=\"material-icons\">&#xE314;</i></button>\n            <button class=\"orbit-next\"><i class=\"material-icons\">&#xE315;</i></button>\n          </div>\n          <ul class=\"orbit-container\">\n            <slot></slot>\n          </ul>\n        </div>\n      </div>\n    `\n  },\n  sticky: {\n    data: function() {\n      return {\n        $breaker: false,\n        breakpoint: false,\n        stuck: false\n      }\n    },\n    methods: {\n      adjustPlyStickyProp: function(direction, slotHeight) {\n        if(direction === 'up') {\n          if(!this.stuck) {\n            if(this.dontkeeptrack !== 'true') ply.sticky.top += slotHeight;\n            this.stuck = true;\n            ply.sticky.z--;\n          }\n        } else {\n          if(this.stuck) {\n            if(this.dontkeeptrack !== 'true') ply.sticky.top -= slotHeight;\n            this.stuck = false;\n            ply.sticky.z++;\n          }\n        }\n      },\n      defineVars: function(next) {\n        var $window = $(window),\n            $self = this.$el,\n            $first = this.$el.firstChild;\n        next($window, $self, $first);\n      },\n      hasReached: function($first) {\n        if(this.breaker) {\n          this.$breaker = document.querySelector(this.breaker);\n          if(this.$breaker === null) this.$breaker = false;\n          if(this.breakpoint) {\n            if(document.body.scrollTop > this.breakpoint) return this.$breaker;\n          } else if(this.$breaker) {\n            if(this.$breaker.getBoundingClientRect().top <= $first.getBoundingClientRect().bottom) return this.$breaker;\n          }\n        } else {\n          return false;\n        }\n      },\n      init: function(vm) {\n        this.defineVars(function($window, $self, $first) {\n          $self.style.height = $first.clientHeight+'px';\n          $window.scroll(function(){\n            setTimeout(function() {\n              if(vm.scrolledTo($self)) {\n                vm.makeSticky($first, {\n                  stickToBottom: vm.hasReached($first)\n                });\n              } else {\n                vm.unstick($first);\n              }\n            }, 100);\n          });\n        });\n      },\n      makeSticky: function($first, options) {\n        if(!this.stuck) {\n          $first.style.width = $first.offsetWidth+'px';\n          $first.style.position = 'fixed';\n          $first.style.top = ply.sticky.top + 'px';\n          $first.style['z-index'] = ply.sticky.z;\n          this.adjustPlyStickyProp('up', $first.clientHeight);\n        } else if(options && options.stickToBottom) {\n          if(!this.breakpoint) this.breakpoint = document.body.scrollTop;\n          var breakerTop = options.stickToBottom.getBoundingClientRect().top;\n          $first.style.top = breakerTop - $first.clientHeight;\n        }\n      },\n      scrolledTo: function($self) {\n        var wrapperTop = $self.getBoundingClientRect().top;\n        if(this.stuck && this.dontkeeptrack !== 'true') {\n          return (wrapperTop+$self.firstChild.clientHeight) < ply.sticky.top;\n        } else {\n          return wrapperTop < ply.sticky.top;\n        }\n      },\n      unstick: function($first) {\n        if(this.stuck) {\n          $first.style = '';\n          this.adjustPlyStickyProp('down', $first.clientHeight);\n        }\n      }\n    },\n    props: ['onsmall', 'breaker', 'dontkeeptrack'],\n    mounted: function() {\n      if((ply.screen() === 'small' && !this.onsmall) || ply.screen() !== 'small') this.init(this);\n    },\n    template: '<div><slot></slot></div>'\n  },\n  tools: {\n    mounted: function() {\n      var vm = this;\n      this.showOrHideToolbar();\n    },\n    data: function() {\n      return {\n        show: false,\n        tools: {\n          flip: {\n            class: 'material-icons',\n            html: 'swap_horizontal_circle',\n            method: function(vm, sheet) {\n              ply.component === 'ply-frontEnd' ? ply.component = 'ply-backEnd' : ply.component = 'ply-frontEnd';\n            }\n          },\n          ace: {\n            class: 'material-icons',\n            html: 'code',\n            component: 'ply-ace-selector'\n          },\n          settings: {\n            class: 'material-icons',\n            html: 'settings',\n            component: 'ply-settings'\n          },\n          upload: {\n            class: 'material-icons',\n            html: 'cloud_upload',\n            component: 'ply-upload'\n          }\n        }\n      }\n    },\n    methods: {\n      launch: function(btn) {\n        btn.component ? ply.component=btn.component : btn.method(this, this.sheet);\n      },\n      showOrHideToolbar: function(next) {\n        var sheetUser = this.sheet.users.findOne({username: ply.user.username});\n        if(sheetUser.apps.findOne('all')) {\n          this.show = true;\n          var vm = this;\n          Vue.nextTick(function(){\n            adjustPlyHeightObjOnChange(vm, 'toolBar');\n          });\n        } else {\n          this.show = false;\n        }\n      }\n    },\n    watch: {\n      'ply.link': function() {\n        this.showOrHideToolbar();\n      }\n    },\n    template: `\n      <ply-sticky v-if=\"show\">\n      <div class=\"grid-x pad10 borderTop borderBottom align-middle text-center bgBleach\">\n        <span class=\"cell auto bold proper\">{{ ply.component.split('-')[1] || 'backend' }}</span>\n        <a v-for=\"btn in tools\" v-if=\"btn.component || btn.method\" class=\"cell auto\" @click=\"launch(btn)\">\n          <b v-if=\"btn.html\" :class=\"btn.class\">{{ btn.html }}</b>\n          <b v-else :class=\"btn.class\"></b>\n        </a>\n      </div>\n      </ply-sticky>\n    `\n  },\n  topBar: {\n    mounted: function() {\n      adjustPlyHeightObjOnChange(this, 'topBar');\n    },\n    template: `\n    <div class=\"grid-x align-middle proper\">\n      <a v-html=\"ply.site.name\" :href=\"ply.url\" class=\"cell shrink pad15\" id=\"plyLogo\"></a>\n      <div class=\"cell auto\">\n        <ply-links class=\"grid-x align-right\" classes=\"cell shrink pad15 hide-for-small-only\">\n            <a class=\"cell auto pad15 show-for-small-only\" data-toggle=\"offCanvas\" id=\"plyToggle\"><h1 class=\"fi-list marginNone\"></h1></a>\n          </ply-links>\n      </div>\n    </div>\n    `\n  },\n  upload: {\n    beforeCreate: function() {\n      ply.dataFormatted = [];\n    },\n    components: {\n      'data-formatter': {\n        data: function() {\n          return {\n            delimiter: ','\n          }\n        },\n        methods: {\n          format: function() {\n            this.parent.prepForUpload(stringToArray(ply.dataRaw, this.delimeter));\n          }\n        },\n        props: ['parent'],\n        template: `\n        <div class=\"grid-x align-middle\">\n          <div class=\"cell auto bold padding\">Delimiter: </div>\n          <div class=\"cell shrink padding\"><input class=\"dotted\" v-model=\"delimiter\"></div>\n          <a @click=\"format\" class=\"cell small-12 button large bgWhite colorBlack bold\">Prepare Data <i class=\"fi-arrow-right colorDarkGreen\"></i></a>\n        </div>\n        `\n      },\n      'data-save-to-sheet': {\n        data: function() {\n          return {\n            keepIds: false,\n            loopFn: false,\n            status: false\n          }\n        },\n        methods: {\n          loopThruData: function() {\n            if(this.loopFn || !this.keepIds) {\n              this.status = 'Plysheet is preparing your data...';\n              var item = ply.dataFormatted;\n              for(var i in ply.dataFormatted) {\n                if(!this.keepIds) delete item[i]._id;\n                if(this.loopFn) eval(this.loopFn);\n              }\n            }          \n          },\n          saveToSheet: function() {\n            var vm = this;\n            this.loopThruData();\n            if(this.keepIds) {\n              ply.dataFormatted.loop({\n                fn: function(i, row, next) {\n                  vm.status = 'Uploaded <span class=\"colorBlue\">' + i + '</span> of <span class=\"colorBlue\">' + ply.dataFormatted.length + '</span> items.';\n                  if(row._id && row._id.$oid) row._id = row._id.$oid;\n                  api.post(vm.sheet.name, {sku:'terst'}).then(function(){\n                    next(vm);\n                  });\n                },\n                done: function() {\n                  vm.status = 'Upload finished!';\n                  ply.dataFormatted = [];\n                }\n              });        \n            } else {\n              var len = ply.dataFormatted.length;\n              vm.progress = 1;\n              vm.status = 'Uploaded <span class=\"colorBlue\">0</span> of <span class=\"colorBlue\">' + len + '</span> items.';\n              var chunks = splitArrIntoChunks(ply.dataFormatted, 250);\n              chunks.loop({\n                fn: function(i, chunk, next) {\n                  vm.status = 'Uploaded <span class=\"colorBlue\">' + ((i+1)*250) + '</span> of <span class=\"colorBlue\">' + len + '</span> items.';\n                  axios.post('https://www.blockometry.com/'+ply.site.url+'/dbBulkUpload', {\n                    collection: vm.sheet.siteId+'_'+vm.sheet.name+'_'+JSON.stringify(vm.sheet._id),\n                    jsonParsed: JSON.stringify(chunk)\n                  }).then(function(res){\n                    vm.status = 'Uploaded <span class=\"colorBlue\">' + ((i+1)*250) + '</span> of <span class=\"colorBlue\">' + len + '</span> items.';\n                    next(vm);\n                  });\n                },\n                done: function() {\n                  vm.status = 'Upload finished!';\n                  ply.dataFormatted = [];\n                }\n              });\n            }\n          }\n        },\n        mixins: [plyMix],\n        props: ['parent'],\n        template:  `\n        <div class=\"grid-x\">\n          <transition name=\"slide-fade\">\n          <h6 v-if=\"status\" class=\"bold marginNone\" v-html=\"status\"></h6>\n          </transition>\n          <div class=\"cell small-12 pad15Y bold\">\n            <b class=\"colorBlue\">{{ parent.dbLength }}</b> item(s) ready to be saved to sheet:\n          </div>\n          <div class=\"cell small-12 pad15Y\">\n            <div class=\"grid-x align-middle\">\n              <div class=\"cell auto\"><b>Preserve existing ids?</b></div>\n              <div class=\"cell shrink\">\n                <div class=\"switch marginNone\">\n                  <input class=\"switch-input\" id=\"keepIds\" type=\"checkbox\" v-model=\"keepIds\">\n                  <label class=\"switch-paddle\" for=\"keepIds\"></label>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"cell small-12 pad15Y\">\n            <textarea rows=\"4\" v-model=\"loopFn\"></textarea>\n          </div>\n          <a @click=\"saveToSheet\" class=\"cell small-12 button large expanded bgWhite colorBlack bold\">Save <i class=\"fi-save colorDarkGreen\"></i></a>\n        </div>\n        `\n      },\n      'upload-file': {\n        data: function() {\n          return {\n            reader: new FileReader()\n          }\n        },\n        methods: {\n          upload: function(e) {\n            var vm = this;\n            vm.reader.onload = function(e) {\n              if(e.target.result) {\n                vm.parent.prepForUpload(e.target.result);\n              } else {\n                ply.notify = 'Failed to upload data.';\n              }\n            }\n            // vm.status = 'Getting data from your computer...';\n            vm.reader.readAsText(e.target.files[0]);\n          }\n        },\n        props: ['parent'],\n        template: `\n        <div class=\"grid-x\">\n          <div class=\"small-12 cell\">\n            <h6 class=\"bold colorBlue\">Select file:</h6>\n            <input @change=\"upload($event)\" type=\"file\">\n          </div>\n        </div>\n        `\n      },\n      'upload-sheet' : {\n        data: function() {\n          return {\n            key: '1MNP7390lQOUVGgJyeJiBDCBxzh8ku5vfArY6kyJeFJU',\n            tab: 1\n          }\n        },\n        methods: {\n          upload: function() {\n            var vm = this;\n            vm.status = 'Getting data from spreadsheet...';\n            googleSheet({\n              key: vm.key,\n              tab: vm.tab,\n              loaded: function(data) {\n                vm.parent.prepForUpload(data);\n              }\n            });\n          }\n        },\n        props: ['parent'],\n        template: `\n          <div class=\"grid-x\">\n            <div class=\"cell small-12 pad15Y\">\n              <h6 class=\"colorBlue bold\">Sheet Key:</h6>\n              <input v-model=\"key\" type=\"text\" class=\"dotted\">\n            </div>\n            <div class=\"cell small-12 pad15Y\">\n              <h6 class=\"colorBlue bold\">Sheet Tab:</h6>\n              <input v-model=\"tab\" type=\"number\" class=\"cell auto dotted\">\n              <br>\n              <button @click=\"upload\" class=\"button large expandX padding colorBlack bold\"><i class=\"fi-upload colorDarkGreen\"></i> Retrieve</button>\n            </div>\n          </div>\n        `\n      },\n      'upload-url' : {\n        data: function() {\n          return {\n            url: 'https://www.blockometry.com/exhaustbarn/api/sheets'\n          }\n        },\n        methods: {\n          upload: function() {\n            var vm = this;\n            axios.get(this.url).then(function(res){\n              vm.parent.prepForUpload(res.data);\n            });\n          }  \n        },\n        props: ['parent'],\n        template: `\n        <div class=\"grid-x\">\n          <div class=\"cell small-12\">\n            <h6 class=\"bold colorBlue\">Url:</h6>\n            <input v-model=\"url\" type=\"text\" class=\"cell auto dotted\">\n            <br>\n            <button @click=\"upload\" class=\"button large expandX padding colorBlack bold\"><i class=\"fi-upload colorDarkGreen\"></i> Retrieve</button>\n          </div>\n        </div> \n        `\n      }\n    },\n    data: function() {\n      return {\n        component: false,\n        dbLength: 0,\n        sideComponent: 'upload-url'\n      }\n    },\n    methods: {\n      prepForUpload: function(data) {\n        if(Array.isArray(data)) {\n          ply.dataFormatted = ply.dataFormatted.concat(data);\n          this.dbLength = ply.dataFormatted.length;\n          ply.dataRaw = '';\n          this.component = 'data-save-to-sheet';\n        } else if(typeof data === 'object') {\n          ply.dataFormatted = ply.dataFormatted.concat([data]);\n          this.dbLength = ply.dataFormatted.length;\n          ply.dataRaw = '';\n          this.component = 'data-save-to-sheet';\n        } else {\n          ply.dataRaw = data;\n          this.component = 'data-formatter';\n        }\n      }\n    },\n    template: `\n    <div class=\"grid-x\">\n      <ply-sticky class=\"cell medium-4\">\n        <div class=\"grid-x\">\n          <div class=\"cell small-12 dotted padding\">\n            <div class=\"grid-x align-middle\">\n              <div class=\"cell auto\"><b>Upload data from?</b></div>\n              <div class=\"cell shrink\">\n                <select v-model=\"sideComponent\">\n                  <option value=\"upload-sheet\">Google Spreadsheet</option>\n                  <option value=\"upload-file\">Computer</option>\n                  <option value=\"upload-url\">Url</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div class=\"cell small-12 dotted padding\">\n            <transition name=\"slide-fade\">\n            <component :is=\"sideComponent\" :parent=\"_self\"></component>\n            </transition>\n          </div>\n        </div>\n      </ply-sticky>\n      <ply-panel class=\"medium-8 padding\">\n        <transition name=\"slide-fade\">\n        <component v-if=\"component\" :is=\"component\" :parent=\"_self\"></component>\n        </transition>\n      </ply-panel>\n    </div>\n    `\n  }\n};\n\nply.init();"
    }; 
};
